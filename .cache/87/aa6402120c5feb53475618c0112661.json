{"id":"node_modules/pug-load/index.js","dependencies":[{"name":"/home/yb/projects/personal/search/package.json","includedInParent":true,"mtime":1587297846559},{"name":"/home/yb/projects/personal/search/.babelrc","includedInParent":true,"mtime":1587200753600},{"name":"/home/yb/projects/personal/search/node_modules/pug-load/package.json","includedInParent":true,"mtime":1587297841047},{"name":"fs","loc":{"line":3,"column":17},"parent":"/home/yb/projects/personal/search/node_modules/pug-load/index.js","resolved":"/home/yb/projects/personal/search/node_modules/parcel/src/builtins/_empty.js"},{"name":"path","loc":{"line":4,"column":19},"parent":"/home/yb/projects/personal/search/node_modules/pug-load/index.js","resolved":"/home/yb/projects/personal/search/node_modules/path-browserify/index.js"},{"name":"pug-walk","loc":{"line":5,"column":19},"parent":"/home/yb/projects/personal/search/node_modules/pug-load/index.js","resolved":"/home/yb/projects/personal/search/node_modules/pug-walk/index.js"},{"name":"object-assign","loc":{"line":6,"column":21},"parent":"/home/yb/projects/personal/search/node_modules/pug-load/index.js","resolved":"/home/yb/projects/personal/search/node_modules/object-assign/index.js"}],"generated":{"js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar walk = require('pug-walk');\nvar assign = require('object-assign');\n\nmodule.exports = load;\nfunction load(ast, options) {\n  options = getOptions(options);\n  // clone the ast\n  ast = JSON.parse(JSON.stringify(ast));\n  return walk(ast, function (node) {\n    if (node.str === undefined) {\n      if (node.type === 'Include' || node.type === 'RawInclude' || node.type === 'Extends') {\n        var file = node.file;\n        if (file.type !== 'FileReference') {\n          throw new Error('Expected file.type to be \"FileReference\"');\n        }\n        var path, str;\n        try {\n          path = options.resolve(file.path, file.filename, options);\n          file.fullPath = path;\n          str = options.read(path, options);\n        } catch (ex) {\n          ex.message += '\\n    at ' + node.filename + ' line ' + node.line;\n          throw ex;\n        }\n        file.str = str;\n        if (node.type === 'Extends' || node.type === 'Include') {\n          file.ast = load.string(str, assign({}, options, {\n            filename: path\n          }));\n        }\n      }\n    }\n  });\n}\n\nload.string = function loadString(src, options) {\n  options = assign(getOptions(options), {\n    src: src\n  });\n  var tokens = options.lex(src, options);\n  var ast = options.parse(tokens, options);\n  return load(ast, options);\n};\nload.file = function loadFile(filename, options) {\n  options = assign(getOptions(options), {\n    filename: filename\n  });\n  var str = options.read(filename);\n  return load.string(str, options);\n};\n\nload.resolve = function resolve(filename, source, options) {\n  filename = filename.trim();\n  if (filename[0] !== '/' && !source)\n    throw new Error('the \"filename\" option is required to use includes and extends with \"relative\" paths');\n\n  if (filename[0] === '/' && !options.basedir)\n    throw new Error('the \"basedir\" option is required to use includes and extends with \"absolute\" paths');\n\n  filename = path.join(filename[0] === '/' ? options.basedir : path.dirname(source.trim()), filename);\n\n  return filename;\n};\nload.read = function read(filename, options) {\n  return fs.readFileSync(filename, 'utf8');\n};\n\nload.validateOptions = function validateOptions(options) {\n  /* istanbul ignore if */\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  /* istanbul ignore if */\n  if (typeof options.lex !== 'function') {\n    throw new TypeError('options.lex must be a function');\n  }\n  /* istanbul ignore if */\n  if (typeof options.parse !== 'function') {\n    throw new TypeError('options.parse must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.resolve && typeof options.resolve !== 'function') {\n    throw new TypeError('options.resolve must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.read && typeof options.read !== 'function') {\n    throw new TypeError('options.read must be a function');\n  }\n};\n\nfunction getOptions(options) {\n  load.validateOptions(options);\n  return assign({\n    resolve: load.resolve,\n    read: load.read\n  }, options);\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pug-load/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pug-load/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}}],"sources":{"node_modules/pug-load/index.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar walk = require('pug-walk');\nvar assign = require('object-assign');\n\nmodule.exports = load;\nfunction load(ast, options) {\n  options = getOptions(options);\n  // clone the ast\n  ast = JSON.parse(JSON.stringify(ast));\n  return walk(ast, function (node) {\n    if (node.str === undefined) {\n      if (node.type === 'Include' || node.type === 'RawInclude' || node.type === 'Extends') {\n        var file = node.file;\n        if (file.type !== 'FileReference') {\n          throw new Error('Expected file.type to be \"FileReference\"');\n        }\n        var path, str;\n        try {\n          path = options.resolve(file.path, file.filename, options);\n          file.fullPath = path;\n          str = options.read(path, options);\n        } catch (ex) {\n          ex.message += '\\n    at ' + node.filename + ' line ' + node.line;\n          throw ex;\n        }\n        file.str = str;\n        if (node.type === 'Extends' || node.type === 'Include') {\n          file.ast = load.string(str, assign({}, options, {\n            filename: path\n          }));\n        }\n      }\n    }\n  });\n}\n\nload.string = function loadString(src, options) {\n  options = assign(getOptions(options), {\n    src: src\n  });\n  var tokens = options.lex(src, options);\n  var ast = options.parse(tokens, options);\n  return load(ast, options);\n};\nload.file = function loadFile(filename, options) {\n  options = assign(getOptions(options), {\n    filename: filename\n  });\n  var str = options.read(filename);\n  return load.string(str, options);\n};\n\nload.resolve = function resolve(filename, source, options) {\n  filename = filename.trim();\n  if (filename[0] !== '/' && !source)\n    throw new Error('the \"filename\" option is required to use includes and extends with \"relative\" paths');\n\n  if (filename[0] === '/' && !options.basedir)\n    throw new Error('the \"basedir\" option is required to use includes and extends with \"absolute\" paths');\n\n  filename = path.join(filename[0] === '/' ? options.basedir : path.dirname(source.trim()), filename);\n\n  return filename;\n};\nload.read = function read(filename, options) {\n  return fs.readFileSync(filename, 'utf8');\n};\n\nload.validateOptions = function validateOptions(options) {\n  /* istanbul ignore if */\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  /* istanbul ignore if */\n  if (typeof options.lex !== 'function') {\n    throw new TypeError('options.lex must be a function');\n  }\n  /* istanbul ignore if */\n  if (typeof options.parse !== 'function') {\n    throw new TypeError('options.parse must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.resolve && typeof options.resolve !== 'function') {\n    throw new TypeError('options.resolve must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.read && typeof options.read !== 'function') {\n    throw new TypeError('options.read must be a function');\n  }\n};\n\nfunction getOptions(options) {\n  load.validateOptions(options);\n  return assign({\n    resolve: load.resolve,\n    read: load.read\n  }, options);\n}\n"},"lineCount":102}},"error":null,"hash":"da4489fead738ea6a52d4cc3b8398feb","cacheData":{"env":{}}}
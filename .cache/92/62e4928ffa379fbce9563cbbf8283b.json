{"id":"node_modules/with/index.js","dependencies":[{"name":"/home/yb/projects/personal/search/package.json","includedInParent":true,"mtime":1587297846559},{"name":"/home/yb/projects/personal/search/.babelrc","includedInParent":true,"mtime":1587200753600},{"name":"/home/yb/projects/personal/search/node_modules/with/package.json","includedInParent":true,"mtime":1587297841047},{"name":"acorn-globals","loc":{"line":3,"column":21},"parent":"/home/yb/projects/personal/search/node_modules/with/index.js","resolved":"/home/yb/projects/personal/search/node_modules/with/node_modules/acorn-globals/index.js"},{"name":"acorn","loc":{"line":4,"column":20},"parent":"/home/yb/projects/personal/search/node_modules/with/index.js","resolved":"/home/yb/projects/personal/search/node_modules/with/node_modules/acorn/dist/acorn.js"},{"name":"acorn/dist/walk","loc":{"line":5,"column":19},"parent":"/home/yb/projects/personal/search/node_modules/with/index.js","resolved":"/home/yb/projects/personal/search/node_modules/with/node_modules/acorn/dist/walk.js"}],"generated":{"js":"var global = arguments[3];\n'use strict';\n\nvar detect = require('acorn-globals');\nvar acorn = require('acorn');\nvar walk = require('acorn/dist/walk');\n\n// hacky fix for https://github.com/marijnh/acorn/issues/227\nfunction reallyParse(source) {\n  return acorn.parse(source, {\n    ecmaVersion: 6,\n    allowReturnOutsideFunction: true\n  });\n}\n\nmodule.exports = addWith\n\n/**\n * Mimic `with` as far as possible but at compile time\n *\n * @param {String} obj The object part of a with expression\n * @param {String} src The body of the with expression\n * @param {Array.<String>} exclude A list of variable names to explicitly exclude\n */\nfunction addWith(obj, src, exclude) {\n  obj = obj + ''\n  src = src + ''\n  exclude = exclude || []\n  exclude = exclude.concat(detect(obj).map(function (global) { return global.name; }))\n  var vars = detect(src).map(function (global) { return global.name; })\n    .filter(function (v) {\n      return exclude.indexOf(v) === -1\n        && v !== 'undefined'\n        && v !== 'this'\n    })\n\n  if (vars.length === 0) return src\n\n  var declareLocal = ''\n  var local = 'locals_for_with'\n  var result = 'result_of_with'\n  if (/^[a-zA-Z0-9$_]+$/.test(obj)) {\n    local = obj\n  } else {\n    while (vars.indexOf(local) != -1 || exclude.indexOf(local) != -1) {\n      local += '_'\n    }\n    declareLocal = 'var ' + local + ' = (' + obj + ')'\n  }\n  while (vars.indexOf(result) != -1 || exclude.indexOf(result) != -1) {\n    result += '_'\n  }\n\n  var inputVars = vars.map(function (v) {\n    return JSON.stringify(v) + ' in ' + local + '?' +\n      local + '.' + v + ':' +\n      'typeof ' + v + '!==\"undefined\"?' + v + ':undefined'\n  })\n\n  src = '(function (' + vars.join(', ') + ') {' +\n    src +\n    '}.call(this' + inputVars.map(function (v) { return ',' + v; }).join('') + '))'\n\n  return ';' + declareLocal + ';' + unwrapReturns(src, result) + ';'\n}\n\n/**\n * Take a self calling function, and unwrap it such that return inside the function\n * results in return outside the function\n *\n * @param {String} src    Some JavaScript code representing a self-calling function\n * @param {String} result A temporary variable to store the result in\n */\nfunction unwrapReturns(src, result) {\n  var originalSource = src\n  var hasReturn = false\n  var ast = reallyParse(src)\n  var ref\n  src = src.split('')\n\n  // get a reference to the function that was inserted to add an inner context\n  if ((ref = ast.body).length !== 1\n   || (ref = ref[0]).type !== 'ExpressionStatement'\n   || (ref = ref.expression).type !== 'CallExpression'\n   || (ref = ref.callee).type !== 'MemberExpression' || ref.computed !== false || ref.property.name !== 'call'\n   || (ref = ref.object).type !== 'FunctionExpression')\n    throw new Error('AST does not seem to represent a self-calling function')\n  var fn = ref\n\n  walk.recursive(ast, null, {\n    Function: function (node, st, c) {\n      if (node === fn) {\n        c(node.body, st, \"ScopeBody\");\n      }\n    },\n    ReturnStatement: function (node) {\n      hasReturn = true;\n      replace(node, 'return {value: (' + (node.argument ? source(node.argument) : 'undefined') + ')};');\n    }\n  });\n  function source(node) {\n    return src.slice(node.start, node.end).join('')\n  }\n  function replace(node, str) {\n    for (var i = node.start; i < node.end; i++) {\n      src[i] = ''\n    }\n    src[node.start] = str\n  }\n  if (!hasReturn) return originalSource\n  else return 'var ' + result + '=' + src.join('') + ';if (' + result + ') return ' + result + '.value'\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/with/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/with/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/with/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/with/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/with/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/with/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/with/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/with/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/with/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/with/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/with/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/with/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/with/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/with/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/with/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/with/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/with/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/with/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/with/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/with/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/with/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/with/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/with/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/with/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/with/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/with/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/with/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/with/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/with/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/with/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/with/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/with/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/with/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/with/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/with/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/with/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/with/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/with/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/with/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/with/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/with/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/with/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/with/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/with/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/with/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/with/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/with/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/with/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/with/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/with/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/with/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/with/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/with/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/with/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/with/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/with/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/with/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/with/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/with/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/with/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/with/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/with/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/with/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/with/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/with/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/with/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/with/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/with/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/with/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/with/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/with/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/with/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/with/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/with/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/with/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/with/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/with/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/with/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/with/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/with/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/with/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/with/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/with/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/with/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/with/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/with/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/with/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/with/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/with/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/with/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/with/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/with/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/with/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/with/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/with/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/with/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/with/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/with/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/with/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/with/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/with/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/with/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/with/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/with/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/with/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/with/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/with/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/with/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/with/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/with/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/with/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/with/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}}],"sources":{"node_modules/with/index.js":"'use strict';\n\nvar detect = require('acorn-globals');\nvar acorn = require('acorn');\nvar walk = require('acorn/dist/walk');\n\n// hacky fix for https://github.com/marijnh/acorn/issues/227\nfunction reallyParse(source) {\n  return acorn.parse(source, {\n    ecmaVersion: 6,\n    allowReturnOutsideFunction: true\n  });\n}\n\nmodule.exports = addWith\n\n/**\n * Mimic `with` as far as possible but at compile time\n *\n * @param {String} obj The object part of a with expression\n * @param {String} src The body of the with expression\n * @param {Array.<String>} exclude A list of variable names to explicitly exclude\n */\nfunction addWith(obj, src, exclude) {\n  obj = obj + ''\n  src = src + ''\n  exclude = exclude || []\n  exclude = exclude.concat(detect(obj).map(function (global) { return global.name; }))\n  var vars = detect(src).map(function (global) { return global.name; })\n    .filter(function (v) {\n      return exclude.indexOf(v) === -1\n        && v !== 'undefined'\n        && v !== 'this'\n    })\n\n  if (vars.length === 0) return src\n\n  var declareLocal = ''\n  var local = 'locals_for_with'\n  var result = 'result_of_with'\n  if (/^[a-zA-Z0-9$_]+$/.test(obj)) {\n    local = obj\n  } else {\n    while (vars.indexOf(local) != -1 || exclude.indexOf(local) != -1) {\n      local += '_'\n    }\n    declareLocal = 'var ' + local + ' = (' + obj + ')'\n  }\n  while (vars.indexOf(result) != -1 || exclude.indexOf(result) != -1) {\n    result += '_'\n  }\n\n  var inputVars = vars.map(function (v) {\n    return JSON.stringify(v) + ' in ' + local + '?' +\n      local + '.' + v + ':' +\n      'typeof ' + v + '!==\"undefined\"?' + v + ':undefined'\n  })\n\n  src = '(function (' + vars.join(', ') + ') {' +\n    src +\n    '}.call(this' + inputVars.map(function (v) { return ',' + v; }).join('') + '))'\n\n  return ';' + declareLocal + ';' + unwrapReturns(src, result) + ';'\n}\n\n/**\n * Take a self calling function, and unwrap it such that return inside the function\n * results in return outside the function\n *\n * @param {String} src    Some JavaScript code representing a self-calling function\n * @param {String} result A temporary variable to store the result in\n */\nfunction unwrapReturns(src, result) {\n  var originalSource = src\n  var hasReturn = false\n  var ast = reallyParse(src)\n  var ref\n  src = src.split('')\n\n  // get a reference to the function that was inserted to add an inner context\n  if ((ref = ast.body).length !== 1\n   || (ref = ref[0]).type !== 'ExpressionStatement'\n   || (ref = ref.expression).type !== 'CallExpression'\n   || (ref = ref.callee).type !== 'MemberExpression' || ref.computed !== false || ref.property.name !== 'call'\n   || (ref = ref.object).type !== 'FunctionExpression')\n    throw new Error('AST does not seem to represent a self-calling function')\n  var fn = ref\n\n  walk.recursive(ast, null, {\n    Function: function (node, st, c) {\n      if (node === fn) {\n        c(node.body, st, \"ScopeBody\");\n      }\n    },\n    ReturnStatement: function (node) {\n      hasReturn = true;\n      replace(node, 'return {value: (' + (node.argument ? source(node.argument) : 'undefined') + ')};');\n    }\n  });\n  function source(node) {\n    return src.slice(node.start, node.end).join('')\n  }\n  function replace(node, str) {\n    for (var i = node.start; i < node.end; i++) {\n      src[i] = ''\n    }\n    src[node.start] = str\n  }\n  if (!hasReturn) return originalSource\n  else return 'var ' + result + '=' + src.join('') + ';if (' + result + ') return ' + result + '.value'\n}\n"},"lineCount":113}},"error":null,"hash":"3db07b52f1848096fd1d3ee1fbc8b580","cacheData":{"env":{}}}